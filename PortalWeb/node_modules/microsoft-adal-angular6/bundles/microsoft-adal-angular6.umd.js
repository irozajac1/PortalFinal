(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('rxjs'), require('adal-angular')) :
    typeof define === 'function' && define.amd ? define('microsoft-adal-angular6', ['exports', '@angular/core', 'rxjs', 'adal-angular'], factory) :
    (factory((global['microsoft-adal-angular6'] = {}),global.ng.core,null,null));
}(this, (function (exports,i0,rxjs,adalLib) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var MsAdalAngular6Service = (function () {
        function MsAdalAngular6Service(adalConfig) {
            this.adalConfig = adalConfig;
            if (typeof adalConfig === 'function') {
                this.adalConfig = adalConfig();
            }
            this.context = adalLib.inject(this.adalConfig);
            this.handleCallback();
        }
        Object.defineProperty(MsAdalAngular6Service.prototype, "LoggedInUserEmail", {
            get: /**
             * @return {?}
             */ function () {
                if (this.isAuthenticated) {
                    return this.context.getCachedUser().userName;
                }
                return '';
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MsAdalAngular6Service.prototype, "LoggedInUserName", {
            get: /**
             * @return {?}
             */ function () {
                if (this.isAuthenticated) {
                    return this.context.getCachedUser().profile.name;
                }
                return '';
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        MsAdalAngular6Service.prototype.login = /**
         * @return {?}
         */
            function () {
                this.context.login();
            };
        /**
         * @return {?}
         */
        MsAdalAngular6Service.prototype.logout = /**
         * @return {?}
         */
            function () {
                this.context.logOut();
            };
        /**
         * @param {?} url
         * @return {?}
         */
        MsAdalAngular6Service.prototype.GetResourceForEndpoint = /**
         * @param {?} url
         * @return {?}
         */
            function (url) {
                var /** @type {?} */ resource = null;
                if (url) {
                    resource = this.context.getResourceForEndpoint(url);
                    if (!resource) {
                        resource = this.adalConfig.clientId;
                    }
                }
                return resource;
            };
        /**
         * @param {?} url
         * @return {?}
         */
        MsAdalAngular6Service.prototype.RenewToken = /**
         * @param {?} url
         * @return {?}
         */
            function (url) {
                var /** @type {?} */ resource = this.GetResourceForEndpoint(url);
                return this.context.clearCacheForResource(resource); // Trigger the ADAL token renew
            };
        /**
         * @param {?} url
         * @return {?}
         */
        MsAdalAngular6Service.prototype.acquireToken = /**
         * @param {?} url
         * @return {?}
         */
            function (url) {
                var /** @type {?} */ _this = this; // save outer this for inner function
                var /** @type {?} */ errorMessage;
                return rxjs.bindCallback(acquireTokenInternal, function (token) {
                    if (!token && errorMessage) {
                        throw (errorMessage);
                    }
                    return token;
                })();
                /**
                 * @param {?} cb
                 * @return {?}
                 */
                function acquireTokenInternal(cb) {
                    var /** @type {?} */ s = null;
                    var /** @type {?} */ resource;
                    resource = _this.GetResourceForEndpoint(url);
                    _this.context.acquireToken(resource, function (error, tokenOut) {
                        if (error) {
                            _this.context.error('Error when acquiring token for resource: ' + resource, error);
                            errorMessage = error;
                            cb(/** @type {?} */ (null));
                        }
                        else {
                            cb(tokenOut);
                            s = tokenOut;
                        }
                    });
                    return s;
                }
            };
        /**
         * @param {?} url
         * @return {?}
         */
        MsAdalAngular6Service.prototype.getToken = /**
         * @param {?} url
         * @return {?}
         */
            function (url) {
                var /** @type {?} */ resource = this.context.getResourceForEndpoint(url);
                var /** @type {?} */ storage = this.adalConfig.cacheLocation;
                var /** @type {?} */ key;
                if (resource) {
                    key = 'adal.access.token.key' + resource;
                }
                else {
                    key = 'adal.idtoken';
                }
                if (storage === 'localStorage') {
                    return localStorage.getItem(key);
                }
                else {
                    return sessionStorage.getItem(key);
                }
            };
        /**
         * @return {?}
         */
        MsAdalAngular6Service.prototype.handleCallback = /**
         * @return {?}
         */
            function () {
                this.context.handleWindowCallback();
            };
        Object.defineProperty(MsAdalAngular6Service.prototype, "userInfo", {
            get: /**
             * @return {?}
             */ function () {
                return this.context.getCachedUser();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MsAdalAngular6Service.prototype, "accessToken", {
            get: /**
             * @return {?}
             */ function () {
                return this.context.getCachedToken(this.adalConfig.clientId);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MsAdalAngular6Service.prototype, "isAuthenticated", {
            get: /**
             * @return {?}
             */ function () {
                return (this.userInfo && this.accessToken) ? true : false;
            },
            enumerable: true,
            configurable: true
        });
        MsAdalAngular6Service.decorators = [
            { type: i0.Injectable, args: [{
                        providedIn: 'root'
                    },] },
        ];
        /** @nocollapse */
        MsAdalAngular6Service.ctorParameters = function () {
            return [
                { type: undefined, decorators: [{ type: i0.Inject, args: ['adalConfig',] },] },
            ];
        };
        /** @nocollapse */ MsAdalAngular6Service.ngInjectableDef = i0.defineInjectable({ factory: function MsAdalAngular6Service_Factory() { return new MsAdalAngular6Service(i0.inject("adalConfig")); }, token: MsAdalAngular6Service, providedIn: "root" });
        return MsAdalAngular6Service;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var AuthenticationGuard = (function () {
        function AuthenticationGuard(adalSvc) {
            this.adalSvc = adalSvc;
        }
        /**
         * @param {?} route
         * @param {?} state
         * @return {?}
         */
        AuthenticationGuard.prototype.canActivate = /**
         * @param {?} route
         * @param {?} state
         * @return {?}
         */
            function (route, state) {
                if (this.adalSvc.isAuthenticated) {
                    return true;
                }
                else {
                    this.adalSvc.login();
                    return false;
                }
            };
        /**
         * @param {?} childRoute
         * @param {?} state
         * @return {?}
         */
        AuthenticationGuard.prototype.canActivateChild = /**
         * @param {?} childRoute
         * @param {?} state
         * @return {?}
         */
            function (childRoute, state) {
                return this.canActivate(childRoute, state);
            };
        AuthenticationGuard.decorators = [
            { type: i0.Injectable },
        ];
        /** @nocollapse */
        AuthenticationGuard.ctorParameters = function () {
            return [
                { type: MsAdalAngular6Service, },
            ];
        };
        return AuthenticationGuard;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var MsAdalAngular6Module = (function () {
        function MsAdalAngular6Module() {
        }
        /**
         * @param {?} adalConfig
         * @return {?}
         */
        MsAdalAngular6Module.forRoot = /**
         * @param {?} adalConfig
         * @return {?}
         */
            function (adalConfig) {
                return {
                    ngModule: MsAdalAngular6Module,
                    providers: [MsAdalAngular6Service, { provide: 'adalConfig', useValue: adalConfig }]
                };
            };
        MsAdalAngular6Module.decorators = [
            { type: i0.NgModule, args: [{
                        imports: [],
                        declarations: [],
                        exports: []
                    },] },
        ];
        return MsAdalAngular6Module;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */

    exports.MsAdalAngular6Service = MsAdalAngular6Service;
    exports.AuthenticationGuard = AuthenticationGuard;
    exports.MsAdalAngular6Module = MsAdalAngular6Module;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,