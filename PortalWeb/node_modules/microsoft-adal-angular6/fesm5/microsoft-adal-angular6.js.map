{"version":3,"file":"microsoft-adal-angular6.js.map","sources":["ng://microsoft-adal-angular6/src/ms-adal-angular6.service.ts","ng://microsoft-adal-angular6/src/authentication-guard.ts","ng://microsoft-adal-angular6/src/ms-adal-angular6.module.ts"],"sourcesContent":["/// <reference path='./../../../node_modules/@types/adal/index.d.ts'/>\nimport { Injectable, Inject } from '@angular/core';\nimport { Observable, bindCallback } from 'rxjs';\nimport * as adalLib from 'adal-angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MsAdalAngular6Service {\n  private context: adal.AuthenticationContext;\n\n  constructor(@Inject('adalConfig') private adalConfig: any) {\n    if (typeof adalConfig === 'function') {\n      this.adalConfig = adalConfig();\n    } \n    this.context = adalLib.inject(this.adalConfig);\n    this.handleCallback();\n  }\n\n  public get LoggedInUserEmail() {\n    if (this.isAuthenticated) {\n      return this.context.getCachedUser().userName;\n    }\n    return '';\n  }\n\n  public get LoggedInUserName() {\n    if (this.isAuthenticated) {\n      return this.context.getCachedUser().profile.name;\n    }\n    return '';\n  }\n\n  public login() {\n    this.context.login();\n  }\n\n  public logout() {\n    this.context.logOut();\n  }\n\n  public GetResourceForEndpoint(url: string): string {\n    let resource = null;\n    if (url) {\n      resource = this.context.getResourceForEndpoint(url);\n      if (!resource) {\n        resource = this.adalConfig.clientId;\n      }\n    }\n    return resource;\n  }\n\n  public RenewToken(url: string) {\n    let resource = this.GetResourceForEndpoint(url);\n    return this.context.clearCacheForResource(resource); // Trigger the ADAL token renew \n  }\n\n  public acquireToken(url: string) {\n    const _this = this;   // save outer this for inner function\n    let errorMessage: string;\n\n    return bindCallback(acquireTokenInternal, (token: string) => {\n      if (!token && errorMessage) {\n        throw (errorMessage);\n      }\n      return token;\n    })();\n\n    function acquireTokenInternal(cb: any) {\n      let s: string = null;\n      let resource: string;\n      resource = _this.GetResourceForEndpoint(url);\n\n      _this.context.acquireToken(resource, (error: string, tokenOut: string) => {\n        if (error) {\n          _this.context.error('Error when acquiring token for resource: ' + resource, error);\n          errorMessage = error;\n          cb(null as string);\n        } else {\n          cb(tokenOut);\n          s = tokenOut;\n        }\n      });\n      return s;\n    }\n  }\n\n  public getToken(url: string): string {\n\n    const resource = this.context.getResourceForEndpoint(url);\n    const storage = this.adalConfig.cacheLocation;\n    let key;\n    if (resource) {\n      key = 'adal.access.token.key' + resource;\n    } else {\n      key = 'adal.idtoken';\n    }\n    if (storage === 'localStorage') {\n      return localStorage.getItem(key);\n    } else {\n      return sessionStorage.getItem(key);\n    }\n  }\n\n  handleCallback() {\n    this.context.handleWindowCallback();\n  }\n\n  public get userInfo() {\n    return this.context.getCachedUser();\n  }\n\n  public get accessToken() {\n    return this.context.getCachedToken(this.adalConfig.clientId);\n  }\n\n  public get isAuthenticated(): boolean {\n    return (this.userInfo && this.accessToken) ? true : false;\n  }\n}","import { Injectable } from \"@angular/core\";\nimport { CanActivate, CanActivateChild, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { MsAdalAngular6Service } from \"./ms-adal-angular6.service\";\n\n@Injectable()\nexport class AuthenticationGuard implements CanActivate, CanActivateChild {\n    constructor(private adalSvc: MsAdalAngular6Service) { }\n\n    public canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        if (this.adalSvc.isAuthenticated) {\n            return true;\n        } else {\n            this.adalSvc.login();\n            return false;\n        }\n    }\n\n    public canActivateChild(childRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        return this.canActivate(childRoute, state);\n    }\n}","import { NgModule } from '@angular/core';\nimport { ModuleWithProviders } from '@angular/core';\nimport { MsAdalAngular6Service } from './ms-adal-angular6.service';\n\n@NgModule({\n  imports: [],\n  declarations: [],\n  exports: []\n})\nexport class MsAdalAngular6Module { \n  static forRoot(adalConfig: any): ModuleWithProviders {\n    return {\n      ngModule: MsAdalAngular6Module,\n      providers: [MsAdalAngular6Service, { provide: 'adalConfig', useValue: adalConfig }]\n    };\n  }\n}"],"names":["adalLib.inject"],"mappings":"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"}
